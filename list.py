a = []
b = list(range(10)) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
c = list('список')  # ['с', 'п', 'и', 'с', 'о', 'к']
d = [ 0 for x in range(10)] # [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
len([1,2,3])

#                   Изменение списков
############################################################
L = [123, 'spam', 1.23]
# НЕ ИЗМЕНЯЮЩИЕ исходный список (Срезы и конкатенации) 

L[:-1]      # [123, 'spam']
L + [4,5,6] # [123, 'spam', 1.23, 4, 5, 6]

# ИЗМЕНЯЮЩИЕ исходный список
L.append('Ni') # не возвращает; L = [123, 'spam', 1.23, 'Ni']

L.pop(2)       # возвращает удаляемый элемент 
# 1.23

M = ['cc', 'aa', 'bb']
M.sort()       # не возвращает; M = ['aa', 'bb', 'cc']
M.reverse()    # не возвращает; M = ['cc', 'bb', 'aa'] 

#           Создание НОВЫХ списков используя другие списки
###############################################################
# Генераторы списков (Списковые включения)

newList = [c * 2 for c in [1 ,2, 3, 4]] # [2, 4, 6, 8]

c = [c * 3 for c in 'list'] # ['lll', 'iii', 'sss', 'ttt']

c = [c * 3 for c in 'list' if c != 'i']  # можно добавить условие; # ['lll', 'sss', 'ttt']

M = [1,2,3]
def fn(x): return x + 1
newList = list(map(fn, M)) # [2, 3, 4]


# Если поместить списковое включение в (),в не в [], то создается генератор
G = (x * 2 for x in [1,2,3,4])
next(G) # 2
next(G) # 4
next(G) # 6
next(G) # 8