class Point:
    "Описание класса"

    # Статические свойства(атрибуты)- доступные всем экземплярам (если небыло перезаписи в конструкторе)   
    x = 1
    y = 1 

    # Метод 
    # - self - ссылка на экземпляр класса
    # - Вызывается через экземпляр класса или через класс с указанием экземпляра:
    #   Point.setX(pt, 10) === pt.setX(10)
    def setX(self, x):
        print('Локальное свойство экземпляра было изменено через метод setX')
        self.x = x

   
#########################################################################################################

# По умолчанию, у экземпляров есть ссылки на статические свойства класса
pt = Point() 

# Локальные свойства (у каждого экземпляра свои) создаются конструктором класса или при присвоении свойств после создания
# Показать все локальные свойства у экземпляра
print(pt.__dict__, 'локальных свойств у экземпляра нет')

# Присваеваем экземпляру локальное свойство x, 
# x больше не ссылается на статическое свойство класса
pt.x = 5 
print(pt.__dict__, 'локальные свойства экземпляра')

Point.setX(pt, 10)
pt.setX(10)
#########################################################################################################

getattr(pt,'x') # значение атрибута
getattr(pt,'z', False) # если нет атрибута то устанавливает False
hasattr(pt, 'y') # наличие атрибута False/True
setattr(pt, 'z', 7) # создать/изменить атрибут 
delattr(pt, 'z') # удалить атрибут

isinstance(pt, Point) # принадлежность экземпляра к классу True/False

print(pt.__doc__) # показать опсиание класса
